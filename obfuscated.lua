--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v89=v2(v0(v30,16));if v19 then local v110=0;local v111;while true do if (v110==1) then return v111;end if (v110==0) then v111=v5(v89,v19);v19=nil;v110=1;end end else return v89;end end end);local function v20(v31,v32,v33) if v33 then local v90=(v31/((5 -3)^(v32-(928 -(214 + 713)))))%((1 + 1)^(((v33-((4 -3) + 0)) -(v32-(878 -(282 + 595)))) + (2 -1))) ;return v90-(v90%(1 -0)) ;else local v91=(4 -2)^(v32-(620 -(555 + 64))) ;return (((v31%(v91 + v91))>=v91) and (1271 -(226 + 1044))) or (931 -(857 + (191 -(32 + 85)))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=(350 -(87 + 263)) + 0 ;local v36;local v37;while true do if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (959 -(892 + 65)) ;v35=2 -1 ;end if (v35==((181 -(67 + 113)) -0)) then return (v37 * (469 -213)) + v36 ;end end end local function v23() local v38=0 + 0 ;local v39;local v40;local v41;local v42;while true do if ((2 -(998 -(915 + 82)))==v38) then return (v42 * (12338840 + 4438376)) + (v41 * (260471 -(551973 -357038))) + (v40 * ((704 + 504) -(802 + 150))) + v39 ;end if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (5 -2) );v18=v18 + 4 ;v38=(1 -0) + 0 ;end end end local function v24() local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1,1207 -(1069 + 70 + 48) ) * ((4 -2)^(69 -37))) + v43 ;local v47=v20(v44,4 + 17 ,54 -23 );local v48=((v20(v44,(116 -84) + 0 )==1) and  -(792 -((1306 -938) + 423))) or (3 -2) ;if (v47==(18 -(10 + 8))) then if (v46==(772 -(201 + 571))) then return v48 * 0 ;else local v112=0 -0 ;while true do if (v112==((1301 -(814 + 45)) -(416 + 26))) then v47=3 -(4 -2) ;v45=0 + 0 + 0 + 0 ;break;end end end elseif (v47==(3621 -1574)) then return ((v46==(438 -(145 + 293))) and (v48 * (((1569 -(116 + 1022)) -(44 + 386))/((6186 -4700) -(998 + 488))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((1 + (886 -(261 + 624)))^(43 + 9)))) ;end local function v25(v49) local v50=0;local v51;local v52;while true do if (((2 + 1) -1)==v50) then v52={};for v113=1081 -(1020 + 60) , #v51 do v52[v113]=v2(v1(v3(v51,v113,v113)));end v50=3;end if (v50==(1426 -(630 + 793))) then return v6(v52);end if (v50==(0 -(0 -0))) then v51=nil;if  not v49 then local v119=0 -0 ;while true do if (v119==(0 + 0)) then v49=v23();if (v49==(0 -0)) then return "";end break;end end end v50=1748 -(760 + 987) ;end if (v50==(1914 -(1789 + 124))) then v51=v3(v16,v18,(v18 + v49) -(767 -(745 + 21)) );v18=v18 + v49 ;v50=2;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99,v100) local v101=(function() return 1509 -(663 + 846) ;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v101==0) then v92=(function() return 0;end)();v93=(function() return nil;end)();v101=(function() return 1 -0 ;end)();end if (1~=v101) then else local v120=(function() return 0 -0 ;end)();while true do if (v120==(0 + 0)) then while true do if ((0 + 0)==v92) then v93=(function() return v94();end)();if (v95(v93, #"]", #"}")~=0) then else local v125=(function() return 0;end)();local v126=(function() return;end)();local v127=(function() return;end)();local v128=(function() return;end)();while true do if (v125~=(398 -(115 + 281))) then else if (v95(v127, #",", #":")== #"}") then v128[1583 -(1535 + 46) ]=(function() return v98[v128[2 + 0 ]];end)();end if (v95(v127,4 -2 ,2)~= #">") then else v128[ #"asd"]=(function() return v98[v128[ #"xxx"]];end)();end v125=(function() return 3 + 0 ;end)();end if (v125==(2 -1)) then local v259=(function() return 560 -(306 + 254) ;end)();local v260=(function() return;end)();while true do if (v259==(0 -0)) then v260=(function() return 867 -(550 + 317) ;end)();while true do if ((1 -0)==v260) then v125=(function() return 3 -1 ;end)();break;end if (v260~=0) then else local v324=(function() return 1467 -(899 + 568) ;end)();while true do if (v324==(1 -0)) then v260=(function() return 1;end)();break;end if (v324==(0 -0)) then v128=(function() return {v96(),v96(),nil,nil};end)();if (v126==(603 -(268 + 335))) then local v331=(function() return 290 -(60 + 230) ;end)();local v332=(function() return;end)();while true do if (v331==0) then v332=(function() return 0;end)();while true do if (v332~=0) then else v128[ #"gha"]=(function() return v96();end)();v128[ #"http"]=(function() return v96();end)();break;end end break;end end elseif (v126== #"<") then v128[ #"nil"]=(function() return v97();end)();elseif (v126==2) then v128[ #"19("]=(function() return v97() -((574 -(426 + 146))^16) ;end)();elseif (v126== #"91(") then local v337=(function() return 0;end)();local v338=(function() return;end)();while true do if (v337~=(285 -(134 + 151))) then else v338=(function() return 1665 -(970 + 695) ;end)();while true do if (v338==(0 -0)) then v128[ #"19("]=(function() return v97() -((1992 -(582 + 1408))^(55 -39)) ;end)();v128[ #"0836"]=(function() return v96();end)();break;end end break;end end end v324=(function() return 1 -0 ;end)();end end end end break;end end end if (v125~=(11 -8)) then else if (v95(v127, #"nil", #"91(")~= #"~") then else v128[ #"0836"]=(function() return v98[v128[ #".dev"]];end)();end v99[v100]=(function() return v128;end)();break;end if (v125==0) then local v262=(function() return 0 + 0 ;end)();while true do if (v262~=(1824 -(1195 + 629))) then else v126=(function() return v95(v93,2 -0 , #"nil");end)();v127=(function() return v95(v93, #"asd1",247 -(187 + 54) );end)();v262=(function() return 781 -(162 + 618) ;end)();end if (v262~=(1 + 0)) then else v125=(function() return 1 + 0 ;end)();break;end end end end end break;end end return v92,v93,v94,v95,v96,v97,v98,v99,v100;end end end end end;end)();local v54=(function() return function(v102,v103,v104) local v105=(function() return 1251 -(721 + 530) ;end)();local v106=(function() return;end)();while true do if ((1271 -(945 + 326))==v105) then v106=(function() return 0 -0 ;end)();while true do if (v106~=(0 -0)) then else local v123=(function() return 0 -0 ;end)();while true do if (v123~=0) then else v102[v103-#"~" ]=(function() return v104();end)();return v102,v103,v104;end end end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #"|",v59 do local v69=(function() return 0;end)();local v70=(function() return;end)();local v71=(function() return;end)();local v72=(function() return;end)();while true do if (v69~=(1636 -(1373 + 263))) then else v70=(function() return 0 + 0 ;end)();v71=(function() return nil;end)();v69=(function() return 1001 -(451 + 549) ;end)();end if (v69==1) then v72=(function() return nil;end)();while true do if ((1 + 0)==v70) then if (v71== #":") then v72=(function() return v21()~=(1086 -(461 + 625)) ;end)();elseif (v71==(1290 -(993 + 295))) then v72=(function() return v24();end)();elseif (v71~= #"asd") then else v72=(function() return v25();end)();end v60[v68]=(function() return v72;end)();break;end if (v70~=(0 -0)) then else local v122=(function() return 0 -0 ;end)();while true do if (v122==(1 + 0)) then v70=(function() return 1385 -(746 + 638) ;end)();break;end if (v122==(0 + 0)) then v71=(function() return v21();end)();v72=(function() return nil;end)();v122=(function() return 1 -0 ;end)();end end end end break;end end end v58[ #"xnx"]=(function() return v21();end)();for v73= #"[",v23() do FlatIdent_61585,Descriptor,v21,v20,v22,v23,v60,v55,v73=(function() return v53(FlatIdent_61585,Descriptor,v21,v20,v22,v23,v60,v55,v73);end)();end for v74= #"[",v23() do v56,v74,v28=(function() return v54(v56,v74,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 + 0 ];local v66=v62[2];local v67=v62[1 + (5 -3) ];return function(...) local v75=v65;local v76=v66;local v77=v67;local v78=v27;local v79=(1837 -(1045 + 791)) + 0 ;local v80= -(1 + 0);local v81={};local v82={...};local v83=v12("#",...) -(530 -(406 + 123)) ;local v84={};local v85={};for v107=0,v83 do if (v107>=v77) then v81[v107-v77 ]=v82[v107 + ((4480 -2710) -(1749 + 20)) ];else v85[v107]=v82[v107 + 1 + (0 -0) ];end end local v86=(v83-v77) + (1323 -(1249 + 73)) ;local v87;local v88;while true do v87=v75[v79];v88=v87[1];if (v88<=(12 + 20)) then if (v88<=(1160 -(466 + 679))) then if (v88<=(16 -9)) then if ((4297==4297) and (v88<=((513 -(351 + 154)) -5))) then if ((949<4778) and (v88<=(1901 -(106 + 1794)))) then if (v88==0) then if (v87[1 + 1 ]==v85[v87[2 + 2 ]]) then v79=v79 + ((1576 -(1281 + 293)) -(267 -(28 + 238))) ;else v79=v87[7 -(8 -4) ];end else v85[v87[116 -(4 + 110) ]]();end elseif (v88==((2145 -(1381 + 178)) -(57 + 527))) then do return;end else local v129=v87[1429 -(41 + 1386) ];v85[v129](v13(v85,v129 + (104 -(17 + 86)) ,v87[3]));end elseif (v88<=(4 + 1)) then if (v88>((8 + 0) -4)) then local v130=v87[8 -(5 + 0) ];local v131=v85[v130];for v224=v130 + (167 -(53 + 69 + 44)) ,v87[6 -2 ] do v131=v131   .. v85[v224] ;end v85[v87[6 -4 ]]=v131;else local v133=v87[2];local v134=v85[v87[(10 -7) + 0 ]];v85[v133 + 1 + 0 ]=v134;v85[v133]=v134[v87[7 -3 ]];end elseif ((3028>=1566) and (v88>(4 + 2))) then local v138=v85[v87[69 -(30 + 35) ]];if v138 then v79=v79 + 1 + 0 ;else v85[v87[(1729 -(381 + 89)) -(1043 + 214) ]]=v138;v79=v87[11 -8 ];end elseif ((v85[v87[1214 -(323 + 889) ]]==v87[10 -(6 + 0) ]) or (3620==1402)) then v79=v79 + (581 -(361 + 219)) ;else v79=v87[323 -(53 + 267) ];end elseif (v88<=(3 + 8)) then if (v88<=(422 -(15 + 270 + 128))) then if (v88>(990 -((30 -12) + 964))) then v85[v87[7 -5 ]]=v64[v87[2 + 1 ]];else local v141=v87[2 + 0 ];local v142,v143=v78(v85[v141](v13(v85,v141 + (851 -(20 + 830)) ,v87[3 + 0 ])));v80=(v143 + v141) -(127 -(116 + (1166 -(1074 + 82)))) ;local v144=0 + 0 ;for v225=v141,v80 do v144=v144 + (739 -(542 + 196)) ;v85[v225]=v142[v144];end end elseif ((2574==2574) and (v88==((45 -24) -11))) then if ((1798<2757) and (v87[1 + (1785 -(214 + 1570)) ]<v85[v87[3 + 1 ]])) then v79=v79 + 1 + 0 ;else v79=v87[7 -4 ];end else v85[v87[2]]=v85[v87[3]] * v85[v87[9 -5 ]] ;end elseif ((v88<=(1564 -(1126 + (1880 -(990 + 465))))) or (377>2604)) then if ((568<911) and (v88==(417 -(118 + 287)))) then local v146=v76[v87[3]];local v147;local v148={};v147=v10({},{__index=function(v228,v229) local v230=v148[v229];return v230[3 -2 ][v230[1123 -(118 + 1003) ]];end,__newindex=function(v231,v232,v233) local v234=0 -0 ;local v235;while true do if (v234==0) then v235=v148[v232];v235[378 -(142 + 235) ][v235[1 + 1 ]]=v233;break;end end end});for v236=4 -3 ,v87[1 + 2 + 1 ] do v79=v79 + 1 ;local v237=v75[v79];if ((3285<4228) and (v237[1]==(44 + 1))) then v148[v236-(978 -(553 + 424)) ]={v85,v237[5 -2 ]};else v148[v236-((627 -(512 + 114)) + 0) ]={v63,v237[2 + 1 ]};end v84[ #v84 + 1 + 0 ]=v148;end v85[v87[4 -2 ]]=v29(v146,v147,v64);else v85[v87[2]]=v85[v87[7 -4 ]][v87[8 -(10 -6) ]];end elseif ((3916>3328) and (v88>14)) then for v239=v87[1 + 1 ],v87[14 -11 ] do v85[v239]=nil;end else v85[v87[755 -((493 -254) + 514) ]]={};end elseif (v88<=(9 + 14)) then if (v88<=(1348 -(797 + 532))) then if (v88<=17) then if (v88>(12 + 4)) then local v153=v87[2];local v154={};for v241=(3 -2) + 0 , #v84 do local v242=v84[v241];for v268=0 -0 , #v242 do local v269=v242[v268];local v270=v269[(560 + 643) -(373 + 829) ];local v271=v269[733 -(476 + 255) ];if ((v270==v85) and (v271>=v153)) then local v299=(212 + 918) -(369 + 761) ;while true do if (v299==(0 + 0 + 0)) then v154[v271]=v270[v271];v269[(3 -2) -0 ]=v154;break;end end end end end else local v155=v87[3 -1 ];local v156=v85[v87[241 -(64 + 174) ]];v85[v155 + 1 ]=v156;v85[v155]=v156[v87[4]];end elseif (v88>(3 + 15)) then local v160=0 -0 ;local v161;while true do if (v160==0) then v161=v87[338 -(144 + 192) ];v85[v161]=v85[v161](v85[v161 + 1 ]);break;end end else v79=v87[219 -(42 + 174) ];end elseif ((2500<3839) and (v88<=21)) then if (v88==(16 + 4)) then local v163=v87[2 + 0 ];v85[v163]=v85[v163]();else local v165=v87[(1995 -(109 + 1885)) + 1 ];v85[v165](v85[v165 + (1505 -(363 + 1141)) ]);end elseif (v88==22) then local v166=v87[(3051 -(1269 + 200)) -(1183 + 397) ];v85[v166]=v85[v166](v13(v85,v166 + 1 ,v80));else v85[v87[(9 -4) -3 ]]=v85[v87[3 + 0 ]][v87[3 + 1 ]];end elseif (v88<=(2002 -(1913 + (877 -(98 + 717))))) then if ((507==507) and (v88<=(16 + 9))) then if ((240<=3165) and (v88>(63 -39))) then v85[v87[1935 -(565 + 1368) ]]=v63[v87[11 -8 ]];elseif (v87[1663 -((2303 -(802 + 24)) + 184) ]<v85[v87[5 -1 ]]) then v79=v79 + 1 + 0 ;else v79=v87[859 -(564 + 292) ];end elseif (v88>(44 -18)) then local v172=v85[v87[6 -(2 -0) ]];if v172 then v79=v79 + (2 -1) ;else local v273=(45 + 259) -(244 + 60) ;while true do if ((834>=805) and (v273==(0 + 0))) then v85[v87[478 -(41 + 435) ]]=v172;v79=v87[(772 + 232) -(938 + 63) ];break;end end end else v85[v87[2 + 0 ]]=v87[1128 -(936 + 32 + 157) ];end elseif ((v88<=(10 + 5 + 14)) or (3812<2316)) then if (v88==(77 -49)) then local v175=1613 -(1565 + 48) ;local v176;while true do if (v175==(0 + 0)) then v176=v87[2];v85[v176]=v85[v176](v85[v176 + (3 -2) ]);break;end end else local v177=v87[1 + 1 ];v85[v177]=v85[v177](v13(v85,v177 + (1139 -(782 + 356)) ,v80));end elseif (v88<=(297 -(72 + 104 + 91))) then local v179=0;local v180;while true do if (v179==(0 -0)) then v180=v87[2 -0 ];v85[v180](v85[v180 + (1093 -(975 + 117)) ]);break;end end elseif ((v88==31) or (2652<=1533)) then local v274=0;local v275;while true do if (v274==(1875 -(157 + 1718))) then v275=v87[2 + 0 ];do return v13(v85,v275,v275 + v87[10 -7 ] );end break;end end else v85[v87[6 -4 ]]=v63[v87[1021 -(697 + 321) ]];end elseif (v88<=(133 -84)) then if (v88<=(84 -(37 + 7))) then if (v88<=36) then if (v88<=(77 -43)) then if (v88==(13 + 20)) then local v181=v87[3 -1 ];local v182,v183=v78(v85[v181](v13(v85,v181 + (2 -(1 + 0)) ,v87[1230 -(322 + 905) ])));v80=(v183 + v181) -(612 -(602 + 5 + 4)) ;local v184=0;for v243=v181,v80 do local v244=1189 -(449 + 740) ;while true do if (v244==(872 -(826 + 46))) then v184=v184 + (948 -(245 + 702)) ;v85[v243]=v182[v184];break;end end end else v85[v87[6 -4 ]][v87[1 + 2 ]]=v85[v87[1902 -(260 + 1638) ]];end elseif (v88==35) then do return v85[v87[(1875 -(797 + 636)) -(382 + 58) ]];end else v85[v87[6 -4 ]][v87[3 + 0 ]]=v87[8 -4 ];end elseif ((v88<=(112 -74)) or (3598<1460)) then if (v88>(1242 -(902 + 303))) then for v245=v87[(14 -11) -(1620 -(1427 + 192)) ],v87[6 -3 ] do v85[v245]=nil;end else local v189=v87[1 + 1 ];v85[v189]=v85[v189](v13(v85,v189 + (1691 -(1121 + 569)) ,v87[217 -(22 + 192) ]));end elseif ((v88>(722 -(483 + 200))) or (4116<1192)) then v64[v87[1466 -(1404 + 59) ]]=v85[v87[2]];else v85[v87[2]][v87[8 -5 ]]=v85[v87[4 -0 ]];end elseif (v88<=(809 -(468 + 103 + 194))) then if ((v88<=42) or (3377<=903)) then if ((3976>=439) and (v88>(603 -(334 + 228)))) then local v195=v87[6 -3 ];local v196=v85[v195];for v247=v195 + (3 -2) ,v87[8 -4 ] do v196=v196   .. v85[v247] ;end v85[v87[2 -0 ]]=v196;else v85[v87[1 + 1 ]]={};end elseif (v88==(279 -(141 + 95))) then v85[v87[2 + 0 ]][v87[7 -4 ]]=v87[9 -5 ];else v85[v87[1 + 1 ]]();end elseif ((3752==3752) and (v88<=46)) then if ((4046>2695) and (v88==(41 + 4))) then v85[v87[5 -3 ]]=v85[v87[3 + 0 ]];else local v203=v87[1 + 1 ];v85[v203]=v85[v203](v13(v85,v203 + 1 + (326 -(192 + 134)) ,v87[4 -1 ]));end elseif (v88<=47) then v85[v87[2 + 0 ]]=v87[166 -(92 + 71) ];elseif (v88>48) then local v278=v87[1 + 1 ];v85[v278](v13(v85,v278 + (1 -0) ,v87[768 -(574 + 191) ]));else local v279=0 + 0 ;local v280;while true do if ((v279==((1276 -(316 + 960)) -0)) or (3545==3197)) then v280=v87[2 + 0 ];v85[v280]=v85[v280]();break;end end end elseif (v88<=57) then if (v88<=53) then if (v88<=51) then if ((2394>373) and (v88==(899 -(254 + 595)))) then do return;end elseif ((4155<=4232) and v85[v87[2]]) then v79=v79 + (127 -(55 + 71)) ;else v79=v87[3 -0 ];end elseif (v88>(1842 -(573 + 1217))) then v85[v87[5 -3 ]]=v29(v76[v87[1 + 2 ]],nil,v64);else v85[v87[2]]=v29(v76[v87[2 + 1 ]],nil,v64);end elseif ((v88<=((68 + 20) -33)) or (3581==3473)) then if ((4995>3348) and (v88==(993 -(714 + 225)))) then v85[v87[2]]=v87[8 -5 ]~=(0 -0) ;else do return v85[v87[1 + 1 ]];end end elseif (v88>(80 -24)) then v85[v87[808 -(118 + 688) ]]=v87[3 + 0 ]~=(48 -(25 + 23)) ;else local v211=0 + 0 ;local v212;local v213;while true do if ((v211==(1887 -(927 + 959))) or (754>3724)) then for v302=3 -(7 -5) , #v84 do local v303=v84[v302];for v314=732 -(16 + 716) , #v303 do local v315=0 -0 ;local v316;local v317;local v318;while true do if (v315==(552 -(83 + 468))) then v318=v316[99 -(11 + 86) ];if ((217>=57) and (v317==v85) and (v318>=v212)) then v213[v318]=v317[v318];v316[2 -1 ]=v213;end break;end if ((v315==(285 -(175 + 110))) or (2070>=4037)) then v316=v303[v314];v317=v316[2 -1 ];v315=4 -3 ;end end end end break;end if (v211==(1796 -(503 + 1293))) then v212=v87[2];v213={};v211=1;end end end elseif ((2705==2705) and (v88<=61)) then if ((61==61) and (v88<=59)) then if (v88==(161 -103)) then v85[v87[2 + 0 ]]=v85[v87[3]] * v85[v87[1065 -(810 + 251) ]] ;else v85[v87[2 + 0 ]]=v64[v87[1 + 2 ]];end elseif (v88==(55 + 5)) then if (v85[v87[535 -(43 + 490) ]]==v87[737 -(711 + 22) ]) then v79=v79 + (3 -2) ;else v79=v87[862 -((2046 -(1202 + 604)) + 619) ];end else v79=v87[1 + 2 ];end elseif (v88<=((466 -366) -37)) then if ((v88==(5 + 57)) or (699>=1296)) then if v85[v87[(2905 -1159) -(1344 + 400) ]] then v79=v79 + (406 -(255 + 150)) ;else v79=v87[3 + 0 ];end else v85[v87[2 + 0 ]]=v85[v87[8 -5 ]];end elseif ((v88<=(273 -209)) or (1783>=3616)) then local v220=v76[v87[9 -6 ]];local v221;local v222={};v221=v10({},{__index=function(v248,v249) local v250=v222[v249];return v250[1740 -(404 + 1335) ][v250[408 -(183 + 223) ]];end,__newindex=function(v251,v252,v253) local v254=0 -0 ;local v255;while true do if (v254==(0 + 0)) then v255=v222[v252];v255[1 + 0 ][v255[339 -(10 + 327) ]]=v253;break;end end end});for v256=1 + 0 ,v87[4] do local v257=338 -(114 + 4 + 220) ;local v258;while true do if ((v257==(0 + 0)) or (3913>4527)) then v79=v79 + 1 ;v258=v75[v79];v257=450 -(108 + 341) ;end if (v257==1) then if (v258[1 + 0 ]==(190 -145)) then v222[v256-(1494 -(711 + 782)) ]={v85,v258[1 + 2 ]};else v222[v256-(1820 -(580 + 1239)) ]={v63,v258[1 + 2 ]};end v84[ #v84 + 1 + 0 ]=v222;break;end end end v85[v87[2]]=v29(v220,v221,v64);elseif (v88==(24 + 41)) then v64[v87[7 -4 ]]=v85[v87[2 + 0 ]];elseif (v87[2]==v85[v87[1171 -(645 + 289 + 233) ]]) then v79=v79 + (1791 -(1010 + 780)) ;else v79=v87[3 + 0 ];end v79=v79 + (4 -3) ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
