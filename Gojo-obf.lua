--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v89=0;while true do if (v89==0) then v19=v0(v3(v30,1,1));return "";end end else local v90=v2(v0(v30,16));if v19 then local v112=v5(v90,v19);v19=nil;return v112;else return v90;end end end);local function v20(v31,v32,v33) if v33 then local v91=0;local v92;while true do if (v91==(0 -0)) then v92=(v31/(2^(v32-(2 -1))))%(2^(((v33-(1 -(0 + 0))) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v92-(v92%(932 -(857 + 74))) ;end end else local v93=2^(v32-(569 -(367 + 201))) ;return (((v31%(v93 + v93))>=v93) and (928 -((1091 -(282 + 595)) + 713))) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1068 -(68 + 997)) );v18=v18 + (1274 -(226 + 1044)) ;return (v40 * ((16200264 + 56854510) -56277558)) + (v39 * (65653 -(32 + 85))) + (v38 * (251 + 5)) + v37 ;end local function v24() local v41=957 -(892 + 65) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(2 -1)) then v44=1 -0 ;v45=(v20(v43,1,36 -16 ) * (((1106 -754) -((105 -(10 + 8)) + 263))^32)) + v42 ;v41=2;end if ((182 -(67 + 113))==v41) then v46=v20(v43,16 + 5 ,75 -44 );v47=((v20(v43,24 + 8 )==(3 -2)) and  -1) or (953 -(802 + 150)) ;v41=7 -4 ;end if (v41==(0 -(0 -0))) then v42=v23();v43=v23();v41=443 -(416 + 26) ;end if (v41==(3 + 0)) then if (v46==(997 -((2921 -2006) + 82))) then if (v45==0) then return v47 * 0 ;else local v118=0 -0 ;while true do if (v118==(0 + 0)) then v46=1 -0 ;v44=1187 -(1069 + 118) ;break;end end end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * ((1 -(0 + 0))/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-((3214 -1397) -794) ) * (v44 + (v45/((2 + 0)^(843 -(368 + 423))))) ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(438 -(145 + 293))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1487 -(998 + 400 + 88)) );v18=v18 + v48 ;local v50={};for v66=431 -(44 + 386) , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v94,v95,v96,v97,v98,v99,v100,v101,v102) local v103=(function() return 0 -0 ;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v103==0) then local v117=(function() return 285 -(134 + 151) ;end)();while true do if (v117~=(2 -1)) then else v103=(function() return 1 + 0 ;end)();break;end if (v117~=(0 + 0)) then else v94=(function() return 0;end)();v95=(function() return nil;end)();v117=(function() return 1 -0 ;end)();end end end if ((1263 -(1091 + 171))==v103) then while true do if ((0 -0)~=v94) then else v95=(function() return v96();end)();if (v97(v95, #"!", #" ")==0) then local v124=(function() return 0 + 0 ;end)();local v125=(function() return;end)();local v126=(function() return;end)();local v127=(function() return;end)();while true do if (v124==1) then local v128=(function() return 0 -0 ;end)();local v129=(function() return;end)();while true do if (v128==(0 -0)) then v129=(function() return 0 -0 ;end)();while true do if (v129~=(1824 -(1195 + 629))) then else v127=(function() return {v98(),v98(),nil,nil};end)();if (v125==(374 -(123 + 251))) then local v427=(function() return 0;end)();local v428=(function() return;end)();while true do if (v427~=(0 -0)) then else v428=(function() return 241 -(187 + 54) ;end)();while true do if ((780 -(162 + 618))~=v428) then else v127[ #"-19"]=(function() return v98();end)();v127[ #"xnxx"]=(function() return v98();end)();break;end end break;end end elseif (v125== #"]") then v127[ #"91("]=(function() return v99();end)();elseif (v125==(9 -7)) then v127[ #"xxx"]=(function() return v99() -((700 -(208 + 490))^(12 + 4)) ;end)();elseif (v125~= #"91(") then else local v448=(function() return 0 + 0 ;end)();local v449=(function() return;end)();while true do if ((0 + 0)~=v448) then else v449=(function() return 0;end)();while true do if (v449~=(0 + 0)) then else v127[ #"xnx"]=(function() return v99() -((838 -(660 + 176))^(2 + 14)) ;end)();v127[ #".dev"]=(function() return v98();end)();break;end end break;end end end v129=(function() return 1;end)();end if (v129~=1) then else v124=(function() return 204 -(14 + 188) ;end)();break;end end break;end end end if (v124==(1636 -(1373 + 263))) then local v130=(function() return 675 -(534 + 141) ;end)();while true do if (v130~=0) then else v125=(function() return v97(v95,1 + 1 , #"asd");end)();v126=(function() return v97(v95, #".dev",2 + 4 );end)();v130=(function() return 1;end)();end if ((1 -0)==v130) then v124=(function() return 1;end)();break;end end end if ((2 + 0)~=v124) then else if (v97(v126, #"}", #"{")~= #"\\") then else v127[2 + 0 ]=(function() return v100[v127[1386 -(746 + 638) ]];end)();end if (v97(v126,2,2)~= #"~") then else v127[ #"19("]=(function() return v100[v127[ #"asd"]];end)();end v124=(function() return 2 + 1 ;end)();end if (v124~=(6 -3)) then else if (v97(v126, #"xxx", #"-19")== #"[") then v127[ #".com"]=(function() return v100[v127[ #"asd1"]];end)();end v101[v102]=(function() return v127;end)();break;end end end break;end end return v94,v95,v96,v97,v98,v99,v100,v101,v102;end end end;end)();local v52=(function() return function(v104,v105,v106) local v107=(function() return 0 -0 ;end)();local v108=(function() return;end)();while true do if (v107==(0 -0)) then v108=(function() return 1581 -(1535 + 46) ;end)();while true do if (v108==0) then local v122=(function() return 0 + 0 ;end)();local v123=(function() return;end)();while true do if (v122~=(0 + 0)) then else v123=(function() return 0;end)();while true do if (v123==(0 + 0)) then local v133=(function() return 560 -(306 + 254) ;end)();while true do if (v133~=0) then else v104[v105-#"\\" ]=(function() return v106();end)();return v104,v105,v106;end end end end break;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"\\",v57 do local v69=(function() return 0 + 0 ;end)();local v70=(function() return;end)();local v71=(function() return;end)();local v72=(function() return;end)();while true do if ((397 -(115 + 281))~=v69) then else v72=(function() return nil;end)();while true do if (v70==0) then local v119=(function() return 0 -0 ;end)();local v120=(function() return;end)();while true do if (v119~=0) then else v120=(function() return 0;end)();while true do if (v120~=1) then else v70=(function() return 1468 -(899 + 568) ;end)();break;end if (v120==(0 -0)) then local v132=(function() return 0 + 0 ;end)();while true do if (v132==(0 -0)) then v71=(function() return v21();end)();v72=(function() return nil;end)();v132=(function() return 2 -1 ;end)();end if (1~=v132) then else v120=(function() return 3 -2 ;end)();break;end end end end break;end end end if ((868 -(550 + 317))==v70) then if (v71== #"!") then v72=(function() return v21()~=(0 -0) ;end)();elseif (v71==(1 + 1)) then v72=(function() return v24();end)();elseif (v71~= #"xxx") then else v72=(function() return v25();end)();end v58[v68]=(function() return v72;end)();break;end end break;end if (v69~=(1456 -(282 + 1174))) then else v70=(function() return 0;end)();v71=(function() return nil;end)();v69=(function() return 1 -0 ;end)();end end end v56[ #"asd"]=(function() return v21();end)();for v73= #"}",v23() do FlatIdent_7366E,Descriptor,v21,v20,v22,v23,v58,v53,v73=(function() return v51(FlatIdent_7366E,Descriptor,v21,v20,v22,v23,v58,v53,v73);end)();end for v74= #"~",v23() do v54,v74,v28=(function() return v52(v54,v74,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[812 -(569 + 242) ];local v64=v60[5 -3 ];local v65=v60[1 + (5 -3) ];return function(...) local v75=v63;local v76=v64;local v77=v65;local v78=v27;local v79=1025 -(706 + 318) ;local v80= -(96 -(51 + 44));local v81={};local v82={...};local v83=v12("#",...) -(1272 -(945 + 326)) ;local v84={};local v85={};for v109=1317 -((3402 -2288) + 203) ,v83 do if (v109>=v77) then v81[v109-v77 ]=v82[v109 + (2 -1) ];else v85[v109]=v82[v109 + 1 + 0 ];end end local v86=(v83-v77) + 1 + 0 ;local v87;local v88;while true do v87=v75[v79];v88=v87[701 -(271 + 429) ];if (v88<=(42 + 3)) then if (v88<=(1522 -((6971 -5563) + (1872 -(389 + 1391))))) then if ((v88<=((688 + 408) -(461 + 625))) or (4922<=1147)) then if (v88<=(1292 -(993 + 295))) then if ((2480==2480) and (v88<=(1 + 0))) then if ((v88==(1171 -(418 + 79 + 674))) or (960<=566)) then local v134=v87[1 + 1 ];local v135=v85[v134];local v136=v85[v134 + 1 + 1 ];if (v136>(0 + 0)) then if ((v135>v85[v134 + 1 + 0 ]) or (2910<=1930)) then v79=v87[7 -(8 -4) ];else v85[v134 + 3 ]=v135;end elseif ((v135<v85[v134 + (530 -(406 + 123)) ]) or (19>452)) then v79=v87[1772 -(1749 + 20) ];else v85[v134 + 1 + 2 ]=v135;end else local v137=v76[v87[1325 -(1249 + 73) ]];local v138;local v139={};v138=v10({},{__index=function(v198,v199) local v200=0 + 0 ;local v201;while true do if (((1145 -(466 + 679))==v200) or (907>3152)) then v201=v139[v199];return v201[1249 -(111 + 1137) ][v201[4 -2 ]];end end end,__newindex=function(v202,v203,v204) local v205=0 -0 ;local v206;while true do if (v205==(1900 -(106 + 1794))) then v206=v139[v203];v206[1 + 0 ][v206[1 + 1 ]]=v204;break;end end end});for v207=2 -1 ,v87[10 -6 ] do v79=v79 + ((385 -270) -(4 + 110)) ;local v208=v75[v79];if ((v208[585 -(57 + 527) ]==((1445 + 24) -((352 -(309 + 2)) + 1386))) or (2505>4470)) then v139[v207-(104 -(17 + 86)) ]={v85,v208[8 -5 ]};else v139[v207-(167 -(122 + 44)) ]={v61,v208[3 + 0 ]};end v84[ #v84 + 1 + 0 ]=v139;end v85[v87[34 -(19 + 13) ]]=v29(v137,v138,v62);end elseif (v88<=(3 -1)) then v85[v87[2 -0 ]]=v87[3]/v85[v87[69 -(30 + (107 -72)) ]] ;elseif (v88>(3 + 0)) then v85[v87[1259 -(1043 + (1426 -(1090 + 122))) ]]=v62[v87[1 + 1 + 1 ]];else local v226=0 -0 ;local v227;local v228;local v229;while true do if (v226==(3 -2)) then v229=1812 -(1293 + (1742 -1223)) ;for v404=v227,v87[4] do v229=v229 + (1213 -(323 + 889)) ;v85[v404]=v228[v229];end break;end if (v226==(0 -(0 + 0))) then v227=v87[582 -((1479 -(628 + 490)) + 219) ];v228={v85[v227](v13(v85,v227 + 1 ,v80))};v226=1 + 0 + 0 ;end end end elseif ((v88<=(420 -(15 + (985 -587)))) or (3711>4062)) then if (v88<=(9 -4)) then local v142=v87[984 -(18 + 964) ];v85[v142]=v85[v142](v13(v85,v142 + (3 -2) ,v80));elseif (v88>(4 + 2)) then local v230=0 + 0 ;local v231;local v232;while true do if ((420==420) and (v230==(2 -1))) then v85[v231 + (4 -3) + 0 ]=v232;v85[v231]=v232[v87[854 -(20 + 830) ]];break;end if (((0 + 0)==v230) or (33>=3494)) then v231=v87[2 + 0 ];v232=v85[v87[129 -(116 + 10) ]];v230=1 + 0 ;end end else local v233=v87[1 + 1 ];v85[v233]=v85[v233](v13(v85,v233 + ((1513 -(431 + 343)) -(542 + 196)) ,v80));end elseif ((v88<=(17 -9)) or (1267==4744)) then if ((2428<3778) and (v85[v87[1 + 1 ]]==v87[(5 -2) + 1 ])) then v79=v79 + 1 + 0 ;else v79=v87[7 -4 ];end elseif (v88==(22 -13)) then v85[v87[1553 -(1126 + 425) ]]=v85[v87[3 -(0 -0) ]][v87[409 -(94 + 24 + 287) ]];else local v238=v87[7 -5 ];local v239=v87[4];local v240=v238 + (1123 -(118 + 1003)) ;local v241={v85[v238](v85[v238 + (378 -(142 + 235)) ],v85[v240])};for v333=4 -3 ,v239 do v85[v240 + v333 ]=v241[v333];end local v242=v241[1 + 0 ];if v242 then v85[v240]=v242;v79=v87[(2675 -(556 + 1139)) -(553 + 424) ];else v79=v79 + (1 -0) ;end end elseif ((v88<=((30 -(6 + 9)) + 1)) or (2946<=1596)) then if (v88<=(13 + 0 + 0)) then if ((4433>3127) and (v88<=(41 -(16 + 14)))) then v85[v87[5 -3 ]]=v85[v87[2 + 1 ]] * v85[v87[2 + 2 ]] ;elseif (v88>(7 + 5)) then local v243=0 -0 ;local v244;local v245;local v246;local v247;while true do if (v243==(2 -1)) then v80=(v246 + v244) -1 ;v247=0 -0 ;v243=5 -3 ;end if (v243==(1 + 1)) then for v407=v244,v80 do v247=v247 + (4 -3) ;v85[v407]=v245[v247];end break;end if (v243==(753 -((408 -(28 + 141)) + 514))) then v244=v87[2];v245,v246=v78(v85[v244](v85[v244 + 1 + 0 ]));v243=1 + 0 ;end end else v85[v87[1 + 1 ]]=v29(v76[v87[3 + 0 ]],nil,v62);end elseif ((4300>=2733) and (v88<=(1343 -(797 + 532)))) then v85[v87[1 + 1 + 0 ]][v87[2 + (1 -0) ]]=v87[4 + 0 ];elseif (v88>(34 -19)) then local v249=v87[(853 + 351) -(373 + 829) ];v85[v249]=v85[v249](v13(v85,v249 + 1 ,v87[734 -((1793 -(486 + 831)) + 255) ]));else local v251=v87[1132 -(369 + 761) ];local v252,v253=v78(v85[v251](v13(v85,v251 + (2 -1) + 0 ,v87[5 -2 ])));v80=(v253 + v251) -(1 -0) ;local v254=0 + 0 ;for v336=v251,v80 do local v337=238 -(64 + (612 -438)) ;while true do if (v337==(0 + 0)) then v254=v254 + (1 -0) ;v85[v336]=v252[v254];break;end end end end elseif ((4829==4829) and (v88<=((68 + 287) -((455 -311) + 192)))) then if (v88<=(233 -((1305 -(668 + 595)) + 157 + 17))) then v79=v87[3 + 0 ];elseif (v88>(4 + 11 + 3)) then v85[v87[1 + 1 ]]=v61[v87[1507 -(363 + 1141) ]];else v85[v87[(5 -3) + 0 ]][v87[1583 -(1183 + 397) ]]=v85[v87[4]];end elseif (v88<=(60 -40)) then local v148=v87[(292 -(23 + 267)) + 0 ];v85[v148](v13(v85,v148 + 1 + 0 ,v87[3]));elseif ((1683<=4726) and (v88==(1996 -(1913 + 62)))) then if  not v85[v87[2]] then v79=v79 + 1 + 0 ;else v79=v87[845 -(497 + 345) ];end else v85[v87[2]]=v61[v87[2 + 1 ]];end elseif ((4835>=3669) and (v88<=(1 + 32))) then if (v88<=((2015 -(1129 + 815)) -44)) then if ((2851>1859) and (v88<=(1357 -(605 + 728)))) then if (v88>(17 + 6)) then v62[v87[1936 -(565 + 1368) ]]=v85[v87[1 + (388 -(371 + 16)) ]];else v85[v87[(1757 -(1326 + 424)) -5 ]]=v85[v87[3]] * v87[15 -11 ] ;end elseif ((3848>2323) and (v88<=(1686 -((2797 -1320) + 184)))) then local v152=v87[2 -0 ];v85[v152]=v85[v152](v13(v85,v152 + 1 + 0 ,v87[859 -(564 + 292) ]));elseif ((2836>469) and (v88==(44 -18))) then do return v85[v87[(18 -13) -3 ]];end else v85[v87[306 -(244 + 60) ]]();end elseif (v88<=(24 + (124 -(88 + 30)))) then if ((v88<=28) or (2096<=540)) then do return v85[v87[478 -((812 -(720 + 51)) + 435) ]];end elseif ((v88==(8 + 21)) or (3183<2645)) then v85[v87[1003 -(938 + (139 -76)) ]]=v85[v87[2 + 1 ]] + v85[v87[4 + 0 ]] ;else v85[v87[(1781 -(421 + 1355)) -3 ]]=v85[v87[1803 -(884 + 916) ]][v85[v87[1129 -(936 + 189) ]]];end elseif (v88<=(11 + 20)) then local v154=v87[1615 -(1565 + 48) ];local v155=v85[v154];local v156=v87[656 -((381 -149) + 421) ];for v210=1 + 0 + 0 ,v156 do v155[v210]=v85[v154 + v210 ];end elseif (v88>((3004 -(286 + 797)) -(1569 + 320))) then local v264=v87[(4167 -3027) -(782 + 356) ];local v265=v85[v87[270 -(176 + 91) ]];v85[v264 + (3 -(2 -0)) ]=v265;v85[v264]=v265[v87[10 -6 ]];else v62[v87[4 -1 ]]=v85[v87[(440 -(397 + 42)) + 1 ]];end elseif ((3230<=3760) and (v88<=(1131 -(975 + 37 + 80)))) then if (v88<=(1911 -(157 + 1718))) then if (v88<=(459 -(360 + 65))) then v85[v87[2 + 0 ]]=v29(v76[v87[3 + 0 ]],nil,v62);elseif (v88>((1089 -(24 + 776)) -(79 + 175))) then v85[v87[6 -4 ]]=v87[10 -7 ]~=(1018 -(697 + 321)) ;else v85[v87[5 -3 ]]=v87[5 -2 ];end elseif ((3828==3828) and (v88<=(85 -48))) then local v158=0 + 0 ;local v159;local v160;local v161;while true do if ((554==554) and (v158==(182 -(92 + (136 -47))))) then v161=v87[5 -2 ];for v379=1 + 0 ,v161 do v160[v379]=v85[v159 + v379 ];end break;end if (v158==(0 -0)) then v159=v87[1229 -(322 + 905) ];v160=v85[v159];v158=1;end end elseif (v88>(649 -((1387 -(222 + 563)) + (19 -10)))) then local v274=v87[1191 -(449 + 740) ];local v275={};for v341=1 + 0 , #v84 do local v342=872 -(826 + 46) ;local v343;while true do if ((v342==((190 -(23 + 167)) + 0)) or (2563==172)) then v343=v84[v341];for v429=(2745 -(690 + 1108)) -(245 + 702) , #v343 do local v430=v343[v429];local v431=v430[(2 + 1) -2 ];local v432=v430[1 + 0 + 1 ];if ((v431==v85) and (v432>=v274)) then local v436=0;while true do if (v436==(0 -0)) then v275[v432]=v431[v432];v430[1245 -(485 + 759) ]=v275;break;end end end end break;end end end elseif v85[v87[1 + 1 ]] then v79=v79 + (1190 -(442 + 747)) ;else v79=v87[1901 -(260 + 1638) ];end elseif (v88<=(482 -(382 + 58))) then if (v88<=(128 -88)) then v85[v87[2 + (848 -(40 + 808)) ]]=v85[v87[5 -2 ]] -v85[v87[11 -(2 + 5) ]] ;elseif (v88==(34 + 7)) then local v276=v76[v87[1208 -(902 + 303) ]];local v277;local v278={};v277=v10({},{__index=function(v344,v345) local v346=v278[v345];return v346[790 -(766 + 23) ][v346[9 -7 ]];end,__newindex=function(v347,v348,v349) local v350=0 -0 ;local v351;while true do if (v350==(0 -0)) then v351=v278[v348];v351[3 -2 ][v351[1075 -(1036 + 37) ]]=v349;break;end end end});for v352=1 + 0 ,v87[1694 -(1121 + 569) ] do v79=v79 + (215 -(22 + (734 -542))) ;local v353=v75[v79];if (v353[1 + 0 ]==(725 -(483 + 200))) then v278[v352-(1 + 0) ]={v85,v353[7 -4 ]};else v278[v352-((892 + 793) -(804 + 662 + 218)) ]={v61,v353[3 -0 ]};end v84[ #v84 + (766 -(468 + 297)) ]=v278;end v85[v87[564 -(334 + 228) ]]=v29(v276,v277,v62);else v85[v87[6 -4 ]]=v85[v87[10 -7 ]];end elseif (v88<=((270 -171) -(83 -27))) then local v163=v87[2 -(0 -0) ];local v164={v85[v163](v13(v85,v163 + 1 + 0 ,v80))};local v165=236 -(141 + 95) ;for v213=v163,v87[4 + 0 ] do v165=v165 + (2 -1) ;v85[v213]=v164[v165];end elseif (v88>(105 -61)) then local v282=v87[1 + 1 ];local v283,v284=v78(v85[v282](v85[v282 + (2 -1) ]));v80=(v284 + v282) -(1 + 0) ;local v285=0 + 0 ;for v355=v282,v80 do v285=v285 + (1 -0) ;v85[v355]=v283[v285];end else local v286=v87[2];local v287=v85[v286];local v288=v85[v286 + 2 + 0 ];if (v288>(574 -((1828 -(1165 + 561)) + 472))) then if (v287>v85[v286 + ((5 + 159) -((284 -192) + 71)) ]) then v79=v87[3];else v85[v286 + 2 + 1 ]=v287;end elseif (v287<v85[v286 + 1 + 0 ]) then v79=v87[1 + 1 + 1 ];else v85[v286 + (4 -(480 -(341 + 138))) ]=v287;end end elseif (v88<=68) then if (v88<=(35 + 21)) then if (v88<=(815 -(155 + 419 + 191))) then if (v88<=(39 + (16 -8))) then if ((3889>=131) and (v88==(114 -68))) then if (v87[(328 -(89 + 237)) + 0 ]==v85[v87[(2743 -1890) -(254 + 595) ]]) then v79=v79 + (127 -((115 -60) + 71)) ;else v79=v87[3];end else do return;end end elseif ((v88<=((943 -(581 + 300)) -14)) or (492==4578)) then v85[v87[2]]=v85[v87[1793 -(573 + 1217) ]] * v87[6 -2 ] ;elseif ((v88>(135 -86)) or (4112<1816)) then local v290=v87[1 + (1221 -(855 + 365)) ];v85[v290]=v85[v290](v85[v290 + (1 -0) ]);elseif  not v85[v87[(2234 -1293) -(714 + 225) ]] then v79=v79 + (2 -1) ;else v79=v87[1 + 2 ];end elseif ((4525>=1223) and (v88<=(73 -20))) then if (v88<=(6 + 45)) then local v167=v87[2 -0 ];v85[v167](v13(v85,v167 + (807 -(118 + 688)) ,v87[51 -(25 + 23) ]));elseif (v88==(11 + 14 + 27)) then v85[v87[1 + 1 ]]();else v85[v87[(3123 -(1030 + 205)) -(927 + 959) ]]= #v85[v87[2 + 1 ]];end elseif ((1090<=4827) and (v88<=(181 -127))) then v85[v87[734 -(16 + 673 + 43) ]][v87[5 -2 ]]=v87[101 -(11 + 86) ];elseif ((v88>((125 + 9) -79)) or (239>1345)) then local v293=v87[287 -(175 + 110) ];local v294={};for v358=2 -1 , #v84 do local v359=v84[v358];for v384=0 -0 , #v359 do local v385=v359[v384];local v386=v385[1797 -(503 + 1293) ];local v387=v385[(291 -(156 + 130)) -3 ];if ((v386==v85) and (v387>=v293)) then local v419=0 + 0 ;while true do if (v419==(1061 -(810 + 251))) then v294[v387]=v386[v387];v385[1 + 0 ]=v294;break;end end end end end else v85[v87[1 + (2 -1) ]]=v87[3 + 0 ]/v85[v87[537 -(43 + (825 -335)) ]] ;end elseif ((v88<=(795 -(711 + (44 -22)))) or (3710>=3738)) then if (v88<=(228 -169)) then if ((v88<=(916 -(240 + 619))) or (3838<2061)) then local v170=v87[1101 -(35 + 1064) ];local v171=v87[1 + 3 ];local v172=v170 + 2 + 0 ;local v173={v85[v170](v85[v170 + 1 ],v85[v172])};for v216=1 + 0 ,v171 do v85[v172 + v216 ]=v173[v216];end local v174=v173[1745 -(1344 + 400) ];if v174 then v85[v172]=v174;v79=v87[1262 -(233 + 1026) ];else v79=v79 + (406 -(255 + 150)) ;end elseif (v88==(46 + 12)) then if ((v87[2 + 0 ]<v85[v87[16 -12 ]]) or (690>1172)) then v79=v79 + (3 -2) ;else v79=v87[(460 + 1282) -(404 + 1335) ];end else v85[v87[408 -(183 + 223) ]]= #v85[v87[3 -0 ]];end elseif ((v88<=(281 -(55 + 166))) or (1592>2599)) then if (v87[2 + 0 ]<v85[v87[2 + 2 ]]) then v79=v79 + 1 + 0 ;else v79=v87[340 -(10 + 327) ];end elseif (v88>(43 + 18)) then v85[v87[340 -(118 + 220) ]]=v85[v87[1 + 2 ]][v85[v87[453 -(108 + 341) ]]];else for v360=v87[1 + 1 ],v87[(7 + 5) -9 ] do v85[v360]=nil;end end elseif (v88<=(1558 -(711 + 782))) then if (v88<=(120 -57)) then v85[v87[2]]=v87[(1355 -(10 + 59)) -(1035 + 248) ]~=(469 -(270 + 199)) ;elseif (v88==(21 + 43)) then do return;end else v85[v87[1821 -(580 + 1239) ]]=v85[v87[8 -5 ]] + v85[v87[4 + 0 ]] ;end elseif ((3574<=4397) and (v88<=(226 -160))) then v61[v87[1 + 2 ]]=v85[v87[1 + 1 ]];elseif ((3135>1330) and (v88==(174 -107))) then if (v85[v87[2 + 0 ]]==v87[1171 -(645 + 522) ]) then v79=v79 + (1791 -(286 + 724 + 780)) ;else v79=v87[3];end else local v303=v87[1342 -(1093 + 247) ];local v304=v85[v303 + 2 + 0 ];local v305=v85[v303] + v304 ;v85[v303]=v305;if ((v304>(0 + 0)) or (3900<=3641)) then if (v305<=v85[v303 + ((14 -11) -2) ]) then v79=v87[14 -11 ];v85[v303 + (8 -5) ]=v305;end elseif ((1724==1724) and (v305>=v85[v303 + (1837 -(1045 + 791)) ])) then local v422=0 -0 ;while true do if (v422==(0 -0)) then v79=v87[4 -1 ];v85[v303 + (508 -(351 + 154)) ]=v305;break;end end end end elseif ((455<=1282) and (v88<=79)) then if ((4606<4876) and (v88<=(1647 -(1281 + 293)))) then if (v88<=(241 -171)) then if (v88>(335 -(28 + 238))) then for v219=v87[4 -2 ],v87[691 -(364 + 324) ] do v85[v219]=nil;end else local v178=v87[4 -(1165 -(671 + 492)) ];local v179={v85[v178](v85[v178 + 1 + 0 ])};local v180=1559 -(1381 + 178) ;for v221=v178,v87[4 + 0 ] do v180=v180 + 1 + 0 + (1215 -(369 + 846)) ;v85[v221]=v179[v180];end end elseif ((v88<=(215 -144)) or (1442>2640)) then local v181=0 + 0 + 0 ;local v182;while true do if ((136<3668) and (((0 + 0) -0)==v181)) then v182=v87[2 + 0 ];v85[v182]=v85[v182](v85[v182 + (471 -(381 + 89)) ]);break;end end elseif ((v88>(57 + (1960 -(1036 + 909)))) or (1784>4781)) then if (v87[2 + 0 ]==v85[v87[3 + 1 ]]) then v79=v79 + 1 + 0 ;else v79=v87[(4 + 0) -1 ];end else local v307=v87[1158 -(1074 + 82) ];local v308=v85[v307 + (3 -1) ];local v309=v85[v307] + v308 ;v85[v307]=v309;if (v308>(1784 -(214 + 1570))) then if (v309<=v85[v307 + (1456 -(990 + (780 -315))) ]) then v79=v87[2 + 1 ];v85[v307 + 2 + 1 ]=v309;end elseif (v309>=v85[v307 + 1 + 0 ]) then v79=v87[1 + 2 ];v85[v307 + (11 -(211 -(11 + 192))) ]=v309;end end elseif ((4585>3298) and (v88<=(1802 -(1668 + 58)))) then if (v88<=74) then v85[v87[628 -(512 + 58 + 56) ]]=v62[v87[7 -4 ]];elseif (v88==(154 -79)) then v85[v87[6 -4 ]]=v87[2 + 1 ];elseif v85[v87[(176 -(135 + 40)) + 1 ]] then v79=v79 + 1 + 0 ;else v79=v87[10 -7 ];end elseif (v88<=(2071 -(109 + 1885))) then v61[v87[1472 -(1269 + 200) ]]=v85[v87[3 -1 ]];elseif (v88==78) then local v313=v87[817 -((237 -139) + 717) ];v85[v313](v85[v313 + (827 -(802 + 24)) ]);else v85[v87[2 -0 ]]={};end elseif ((v88<=(107 -22)) or (1664>1698)) then if (v88<=(8 + 5 + 69)) then if (v88<=80) then v79=v87[3 + 0 ];elseif (v88>(14 + 67)) then local v315=0 + 0 ;local v316;while true do if (v315==(0 -0)) then v316=v87[6 -4 ];v85[v316](v85[v316 + 1 + 0 ]);break;end end else v85[v87[1 + 1 ]]=v85[v87[3 + 0 ]] -v85[v87[17 -13 ]] ;end elseif ((v88<=((72 -39) + 50)) or (3427<2849)) then v85[v87[2 + 0 ]]=v85[v87[2 + (1 -0) ]] * v85[v87[1437 -(797 + 636) ]] ;elseif ((3616<=4429) and (v88==(407 -323))) then local v318=v87[1621 -(1427 + 192) ];do return v13(v85,v318,v318 + v87[2 + 1 ] );end else v85[v87[4 -(178 -(50 + 126)) ]]={};end elseif (v88<=(1602 -(822 + 692))) then if (v88<=(78 + (22 -14))) then local v189=0 + 0 ;local v190;local v191;local v192;while true do if (v189==(297 -(45 + 252))) then v190=v87[(73 + 255) -(192 + 134) ];v191={v85[v190](v85[v190 + 1 + 0 ])};v189=1;end if (v189==(1 + 0)) then v192=0;for v392=v190,v87[4 + 0 ] do local v393=0 -0 ;while true do if (v393==(551 -(83 + 468))) then v192=v192 + (1807 -((2615 -(1233 + 180)) + 604)) ;v85[v392]=v191[v192];break;end end end break;end end elseif (v88==(406 -319)) then local v320=v87[2 -0 ];local v321=v85[v320];for v365=v320 + (2 -1) ,v87[1209 -(741 + 465) ] do v7(v321,v85[v365]);end else local v322=v87[2];local v323,v324=v78(v85[v322](v13(v85,v322 + (326 -(45 + 280)) ,v87[3 + (969 -(522 + 447)) ])));v80=(v324 + v322) -((1422 -(107 + 1314)) + 0) ;local v325=0 + 0 + 0 ;for v366=v322,v80 do v325=v325 + 1 + 0 ;v85[v366]=v323[v325];end end elseif (v88<=(74 + 15)) then v85[v87[1 + 1 ]][v87[2 + (2 -1) ]]=v85[v87[6 -2 ]];elseif ((3988>=66) and (v88==(2001 -(145 + 195 + 1571)))) then v85[v87[(1 -0) + 1 ]]=v85[v87[1775 -(1733 + 39) ]][v87[10 -6 ]];else v85[v87[1036 -(125 + 909) ]]=v85[v87[1951 -(1096 + 852) ]];end v79=v79 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
